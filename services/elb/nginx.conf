worker_processes  auto;

pid /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    include /etc/nginx/shared/gzip.nginx.conf;

    proxy_buffers          64 4k;
    proxy_buffer_size         8k;
    proxy_busy_buffers_size   24k;

    sendfile on;
    server_tokens off;
    absolute_redirect off;

    ssl_certificate     /etc/nginx/ssl/ssl.crt.pem;
    ssl_certificate_key /etc/nginx/ssl/ssl.key.pem;

    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;
    ssl_session_tickets off;

    ssl_protocols TLSv1.3;
    ssl_prefer_server_ciphers off;

    server {
        listen 8080 default;
        return 301 https://$host$request_uri;
    }

    server {
        listen 8443 ssl http2;

        # this is the internal Docker DNS, cache only for 30s
        # use $upstream to skip the service availability check,
        # which allows starting only some of the Docker services
        resolver 127.0.0.11 valid=30s;

        location / {
            set $upstream http://locations:8080;
            include /etc/nginx/shared/proxy.nginx.conf;
            proxy_pass $upstream;
        }

        location /contact-form {
            set $upstream http://contact-form:8080;
            include /etc/nginx/shared/proxy.nginx.conf;
            proxy_pass $upstream;
        }

        location /webapp {
            set $upstream http://webapp:8080;
            include /etc/nginx/shared/proxy.nginx.conf;
            proxy_pass $upstream;
        }

        location /scanner {
            set $upstream http://scanner:8080;
            include /etc/nginx/shared/proxy.nginx.conf;
            proxy_pass $upstream;
        }

        location /api {
            set $upstream http://backend:8080;
            include /etc/nginx/shared/proxy.nginx.conf;
            proxy_pass $upstream;
        }

        location /maintenance {
            set $upstream http://maintenance:8080;
            include /etc/nginx/shared/proxy.nginx.conf;
            proxy_pass $upstream;
        }

        location /health-department {
            return 307 https://$host:9443/health-department;
        }
    }

    server {
        listen 9443 ssl http2;

        # this is the internal Docker DNS, cache only for 30s
        # use $upstream to skip the service availability check,
        # which allows starting only some of the Docker services
        resolver 127.0.0.11 valid=30s;

        ssl_client_certificate /etc/nginx/ssl/ssl.client.pem;
        ssl_verify_client on;

        location / {
            return 307 https://$host:9443/health-department;
        }

        location /health-department {
            set $upstream http://health-department:8080;
            include /etc/nginx/shared/proxy.nginx.conf;
            proxy_pass $upstream;
        }

        location /api {
            set $upstream http://backend:8080;
            include /etc/nginx/shared/proxy.nginx.conf;
            proxy_pass $upstream;
        }
    }
}