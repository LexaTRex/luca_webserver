paths:
  /badges/bloomFilter:
    get:
      tags:
        - Badges
      responses:
        '200':
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '304':
          description: Not Modified
        '404':
          description: Not Found
      operationId: get-bloomFilter
      description: Get a bloom filter that holds all unregistered badge UUIDs
    parameters:
      - schema:
          type: string
        name: If-None-Match
        in: header
        required: true
  /badges/:
    post:
      summary: Create badge user
      operationId: post-users-badge
      responses:
        204:
          description: Success
        400:
          $ref: '#/components/schemas/BadRequest'
        403:
          description: Signature not valid
        409:
          description: User already present
      tags:
        - Users
      parameters:
        - in: header
          name: Badge-Generator-Authorization
          description: Bearer token.
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                publicKey:
                  type: string
