components:
  schemas:
    User:
      type: object
      properties:
        userId:
          type: string
        data:
          type: string
        iv:
          type: string
        mac:
          type: string
        signature:
          type: string
        publicKey:
          type: string
    UpdatableUser:
      type: object
      properties:
        data:
          type: string
        iv:
          type: string
        mac:
          type: string
        signature:
          type: string
paths:
  '/users/{userId}':
    get:
      summary: Get user details by ID
      tags:
        - Users
      parameters:
        - in: path
          name: userId
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: A user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/schemas/BadRequest'
        '404':
          description: User not found
        '429':
          $ref: '#/components/schemas/TooManyRequestsHour'
    patch:
      summary: update the user object by id
      parameters:
        - in: path
          name: userId
          schema:
            type: string
            format: uuid
          required: true
      tags:
        - Users
      responses:
        '204':
          description: Success
        '400':
          $ref: '#/components/schemas/BadRequest'
        '403':
          description: User with static QR Codes canÂ´t be updated
        '404':
          description: User not found
        '429':
          $ref: '#/components/schemas/TooManyRequestsHour'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatableUser'
    delete:
      summary: mark the user object for deletion
      description:
        requestBody needs to contain an object with the signature key/value
      parameters:
        - in: path
          name: userId
          schema:
            type: string
            format: uuid
          required: true
      tags:
        - Users
      responses:
        '204':
          description: Success
        '400':
          $ref: '#/components/schemas/BadRequest'
        '403':
          description: Invalid Signature
        '404':
          description: User not found
        '429':
          $ref: '#/components/schemas/TooManyRequestsHour'
  /users:
    post:
      summary: Create or update user
      tags:
        - Users
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
        '400':
          $ref: '#/components/schemas/BadRequest'
        '403':
          description: Invalid Signature
        '429':
          $ref: '#/components/schemas/TooManyRequestsHour'
      operationId: get-users
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                data:
                  type: string
                  minLength: 1
                iv:
                  type: string
                  minLength: 1
                mac:
                  type: string
                  minLength: 1
                publicKey:
                  type: string
                  minLength: 1
                signature:
                  type: string
                  minLength: 1
              required:
                - data
                - iv
                - mac
                - publicKey
                - signature
      description: Create or update users (by publicKey).
